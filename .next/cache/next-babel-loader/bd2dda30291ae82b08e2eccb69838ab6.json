{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nvar Funfact = /*#__PURE__*/function (_React$Component) {\n  _inherits(Funfact, _React$Component);\n\n  var _super = _createSuper(Funfact);\n\n  function Funfact() {\n    var _this;\n\n    _classCallCheck(this, Funfact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onVisibilityChange\", function (isVisible) {\n      if (isVisible) {\n        _this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Funfact, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"section\", {\n        className: \"app-funfacts-area ptb-100\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-users\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 806 : 0,\n        duration: 3\n      })))), __jsx(\"p\", null, \"Satisfied Client\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-thumbs-up\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 202 : 0,\n        duration: 3\n      })))), __jsx(\"p\", null, \"Appriciation\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-diamond\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 5241 : 0,\n        duration: 3\n      })))), __jsx(\"p\", null, \"Response time\"))), __jsx(\"div\", {\n        className: \"col-lg-3 col-sm-6\"\n      }, __jsx(\"div\", {\n        className: \"single-funfact\"\n      }, __jsx(\"div\", {\n        className: \"icon\"\n      }, __jsx(\"i\", {\n        className: \"icofont-wrench\"\n      })), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"count\"\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 512 : 0,\n        duration: 3\n      })))), __jsx(\"p\", null, \"Updates\")))))), __jsx(\"section\", {\n        className: \"fun-facts-area ptb-100 bg-gray\"\n      }, __jsx(\"div\", {\n        className: \"fun-facts-inner-area mt-0\"\n      }, __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"row h-100 justify-content-center align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col-lg-6 col-md-12\"\n      }, __jsx(\"div\", {\n        className: \"fun-facts-image\"\n      }, __jsx(\"img\", {\n        src: \"/images/features-img1.png\",\n        alt: \"image\"\n      }))), __jsx(\"div\", {\n        className: \"col-lg-6 col-md-12\"\n      }, __jsx(\"div\", {\n        className: \"fun-facts-inner-content\"\n      }, __jsx(\"h3\", null, \"Build Beautiful Interface Into Your Application\"), __jsx(\"p\", null, \"Funding freemium technology focus equity bootstrapping usernce niche market. Seed round agile development growth hacking retur investment alpha. Investor advisor marketing pitch gen scrum project.\"), __jsx(\"p\", null, \"Responsive web design. Agile development innovator termsheet is users interface pitch scrum project research & development.\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Unimited Video Call\"), __jsx(\"li\", null, \"Add Favourite contact\"), __jsx(\"li\", null, \"Camera Filter\")), __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\"\n      }, \"Read More\")))))))));\n    }\n  }]);\n\n  return Funfact;\n}(React.Component);\n\nexport default Funfact;","map":{"version":3,"sources":["C:/Users/David/Desktop/tt/components/SoftwareLanding/Funfact.js"],"names":["React","Link","CountUp","VisibilitySensor","Funfact","didViewCountUp","isVisible","setState","onVisibilityChange","top","state","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport CountUp from 'react-countup';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nclass Funfact extends React.Component {\r\n\r\n    state = {\r\n        didViewCountUp: false\r\n    };\r\n\r\n    onVisibilityChange = isVisible => {\r\n        if (isVisible) {\r\n            this.setState({ didViewCountUp: true });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <section className=\"app-funfacts-area ptb-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-users\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 806\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Satisfied Client</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-thumbs-up\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 202\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Appriciation</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-diamond\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 5241\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Response time</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-wrench\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 512\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Updates</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            \r\n            <section className=\"fun-facts-area ptb-100 bg-gray\">\r\n                <div className=\"fun-facts-inner-area mt-0\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row h-100 justify-content-center align-items-center\">\r\n                            <div className=\"col-lg-6 col-md-12\">\r\n                                <div className=\"fun-facts-image\">\r\n                                    <img src='/images/features-img1.png' alt=\"image\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12\">\r\n                                <div className=\"fun-facts-inner-content\">\r\n                                    <h3>Build Beautiful Interface Into Your Application</h3>\r\n                                    <p>Funding freemium technology focus equity bootstrapping usernce niche market. Seed round agile development growth hacking retur investment alpha. Investor advisor marketing pitch gen scrum project.</p>\r\n                                    <p>Responsive web design. Agile development innovator termsheet is users interface pitch scrum project research & development.</p>\r\n                                    <ul>\r\n                                        <li>Unimited Video Call</li>\r\n                                        <li>Add Favourite contact</li>\r\n                                        <li>Camera Filter</li>\r\n                                    </ul>\r\n                                    <Link href=\"#\">\r\n                                        <a className=\"btn btn-primary\">Read More</a>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Funfact;\r\n"]},"metadata":{},"sourceType":"module"}