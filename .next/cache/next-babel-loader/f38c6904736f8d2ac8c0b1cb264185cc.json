{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport Link from '../../utils/ActiveLink';\nimport SideDrawer from './SideDrawer';\nimport SearchForm from './SearchForm';\n\nclass Navbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"state\", {\n      drawer: false,\n      searchForm: false,\n      collapsed: true\n    });\n\n    _defineProperty(this, \"toggleNavbar\", () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    });\n\n    _defineProperty(this, \"handleDrawer\", () => {\n      this.setState(prevState => {\n        return {\n          drawer: !prevState.drawer\n        };\n      });\n    });\n\n    _defineProperty(this, \"handleSearchForm\", () => {\n      this.setState(prevState => {\n        return {\n          searchForm: !prevState.searchForm\n        };\n      });\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    let elementId = document.getElementById('navbar');\n    document.addEventListener('scroll', () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add('is-sticky');\n      } else {\n        elementId.classList.remove('is-sticky');\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let {\n      pathname\n    } = this.props.router;\n    let {\n      products\n    } = this.props;\n    let layOutCls = '';\n    let logo = '/images/logot.png';\n\n    if (pathname == '/digital-marketing') {\n      layOutCls = 'marketing-navbar';\n      logo = '/images/logo-truthdrk.png';\n    }\n\n    const {\n      collapsed\n    } = this.state;\n    const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n    const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n    return __jsx(React.Fragment, null, __jsx(\"header\", {\n      id: \"header\"\n    }, __jsx(\"div\", {\n      id: \"navbar\",\n      className: `crake-nav ${layOutCls}`\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-light\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      className: \"navbar-brand\"\n    }, __jsx(\"img\", {\n      src: logo,\n      alt: \"logo\"\n    }))), __jsx(\"button\", {\n      onClick: this.toggleNavbar,\n      className: classTwo,\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent\",\n      \"aria-controls\": \"navbarSupportedContent\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\"\n    }, __jsx(\"span\", {\n      className: \"navbar-toggler-icon\"\n    })), __jsx(\"div\", {\n      className: classOne,\n      id: \"navbarSupportedContent\"\n    }, __jsx(\"ul\", {\n      className: \"navbar-nav nav ml-auto\"\n    }, __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"/\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Home\"))), __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"/about-one\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"About\"))), __jsx(\"li\", null, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"/faq\"\n    }, __jsx(\"a\", null, \"FAQ\"))), __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      activeClassName: \"active\",\n      href: \"/contact\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Contact\"))))))))), this.state.drawer ? __jsx(SideDrawer, {\n      onClick: this.handleDrawer\n    }) : '', this.state.searchForm ? __jsx(SearchForm, {\n      onClick: this.handleSearchForm\n    }) : '');\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Navbar));","map":{"version":3,"sources":["C:/Users/David/Desktop/tt/components/Layouts/Navbar.js"],"names":["React","withRouter","connect","Link","SideDrawer","SearchForm","Navbar","Component","drawer","searchForm","collapsed","setState","state","prevState","componentDidMount","_isMounted","elementId","document","getElementById","addEventListener","window","scrollY","classList","add","remove","scrollTo","componentWillUnmount","render","pathname","props","router","products","layOutCls","logo","classOne","classTwo","toggleNavbar","handleDrawer","handleSearchForm","mapStateToProps","addedItems"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport Link from '../../utils/ActiveLink';\r\nimport SideDrawer from './SideDrawer';\r\nimport SearchForm from './SearchForm';\r\n\r\nclass Navbar extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    drawer: false,\r\n    searchForm: false,\r\n    collapsed: true,\r\n  };\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        drawer: !prevState.drawer,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSearchForm = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        searchForm: !prevState.searchForm,\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    let elementId = document.getElementById('navbar');\r\n    document.addEventListener('scroll', () => {\r\n      if (window.scrollY > 170) {\r\n        elementId.classList.add('is-sticky');\r\n      } else {\r\n        elementId.classList.remove('is-sticky');\r\n      }\r\n    });\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    let { pathname } = this.props.router;\r\n    let { products } = this.props;\r\n\r\n    let layOutCls = '';\r\n    let logo = '/images/logot.png';\r\n    if (pathname == '/digital-marketing') {\r\n      layOutCls = 'marketing-navbar';\r\n      logo = '/images/logo-truthdrk.png';\r\n    }\r\n\r\n    const { collapsed } = this.state;\r\n    const classOne = collapsed\r\n      ? 'collapse navbar-collapse'\r\n      : 'collapse navbar-collapse show';\r\n    const classTwo = collapsed\r\n      ? 'navbar-toggler navbar-toggler-right collapsed'\r\n      : 'navbar-toggler navbar-toggler-right';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <header id='header'>\r\n          <div id='navbar' className={`crake-nav ${layOutCls}`}>\r\n            <div className='container'>\r\n              <nav className='navbar navbar-expand-md navbar-light'>\r\n                <Link href='/'>\r\n                  <a className='navbar-brand'>\r\n                    <img src={logo} alt='logo' />\r\n                  </a>\r\n                </Link>\r\n\r\n                <button\r\n                  onClick={this.toggleNavbar}\r\n                  className={classTwo}\r\n                  type='button'\r\n                  data-toggle='collapse'\r\n                  data-target='#navbarSupportedContent'\r\n                  aria-controls='navbarSupportedContent'\r\n                  aria-expanded='false'\r\n                  aria-label='Toggle navigation'\r\n                >\r\n                  <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n\r\n                <div className={classOne} id='navbarSupportedContent'>\r\n                  <ul className='navbar-nav nav ml-auto'>\r\n                    <li className='nav-item'>\r\n                      <Link activeClassName='active' href='/'>\r\n                        <a className='nav-link'>Home</a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item'>\r\n                      <Link activeClassName='active' href='/about-one'>\r\n                        <a className='nav-link'>About</a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                      <Link activeClassName='active' href='/faq'>\r\n                        <a>FAQ</a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item'>\r\n                      <Link activeClassName='active' href='/contact'>\r\n                        <a className='nav-link'>Contact</a>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {this.state.drawer ? <SideDrawer onClick={this.handleDrawer} /> : ''}\r\n        {this.state.searchForm ? (\r\n          <SearchForm onClick={this.handleSearchForm} />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.addedItems,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Navbar));\r\n"]},"metadata":{},"sourceType":"module"}