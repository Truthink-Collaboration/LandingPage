{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport Link from '../../utils/ActiveLink';\nimport SideDrawer from './SideDrawer';\nimport SearchForm from './SearchForm';\n\nvar Navbar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Navbar, _React$Component);\n\n  var _super = _createSuper(Navbar);\n\n  function Navbar() {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      drawer: false,\n      searchForm: false,\n      collapsed: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleNavbar\", function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawer\", function () {\n      _this.setState(function (prevState) {\n        return {\n          drawer: !prevState.drawer\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchForm\", function () {\n      _this.setState(function (prevState) {\n        return {\n          searchForm: !prevState.searchForm\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      var elementId = document.getElementById('navbar');\n      document.addEventListener('scroll', function () {\n        if (window.scrollY > 170) {\n          elementId.classList.add('is-sticky');\n        } else {\n          elementId.classList.remove('is-sticky');\n        }\n      });\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pathname = this.props.router.pathname;\n      var products = this.props.products;\n      var layOutCls = '';\n      var logo = '/images/logot.png';\n\n      if (pathname == '/digital-marketing') {\n        layOutCls = 'marketing-navbar';\n        logo = '/images/logo-truthdrk.png';\n      }\n\n      var collapsed = this.state.collapsed;\n      var classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n      var classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n      return __jsx(React.Fragment, null, __jsx(\"header\", {\n        id: \"header\"\n      }, __jsx(\"div\", {\n        id: \"navbar\",\n        className: \"crake-nav \".concat(layOutCls)\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"nav\", {\n        className: \"navbar navbar-expand-md navbar-light\"\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", {\n        className: \"navbar-brand\"\n      }, __jsx(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }))), __jsx(\"button\", {\n        onClick: this.toggleNavbar,\n        className: classTwo,\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarSupportedContent\",\n        \"aria-controls\": \"navbarSupportedContent\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\"\n      }, __jsx(\"span\", {\n        className: \"navbar-toggler-icon\"\n      })), __jsx(\"div\", {\n        className: classOne,\n        id: \"navbarSupportedContent\"\n      }, __jsx(\"ul\", {\n        className: \"navbar-nav nav ml-auto\"\n      }, __jsx(\"li\", {\n        className: \"nav-item\"\n      }, __jsx(Link, {\n        activeClassName: \"active\",\n        href: \"/\"\n      }, __jsx(\"a\", {\n        className: \"nav-link\"\n      }, \"Home\"))), __jsx(\"li\", {\n        className: \"nav-item\"\n      }, __jsx(Link, {\n        activeClassName: \"active\",\n        href: \"/about-one\"\n      }, __jsx(\"a\", {\n        className: \"nav-link\"\n      }, \"About\"))), __jsx(\"li\", null, __jsx(Link, {\n        activeClassName: \"active\",\n        href: \"/faq\"\n      }, __jsx(\"a\", null, \"FAQ\"))), __jsx(\"li\", {\n        className: \"nav-item\"\n      }, __jsx(Link, {\n        activeClassName: \"active\",\n        href: \"/contact\"\n      }, __jsx(\"a\", {\n        className: \"nav-link\"\n      }, \"Contact\"))))))))), this.state.drawer ? __jsx(SideDrawer, {\n        onClick: this.handleDrawer\n      }) : '', this.state.searchForm ? __jsx(SearchForm, {\n        onClick: this.handleSearchForm\n      }) : '');\n    }\n  }]);\n\n  return Navbar;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.addedItems\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Navbar));","map":{"version":3,"sources":["C:/Users/David/Desktop/tt/components/Layouts/Navbar.js"],"names":["React","withRouter","connect","Link","SideDrawer","SearchForm","Navbar","drawer","searchForm","collapsed","setState","state","prevState","_isMounted","elementId","document","getElementById","addEventListener","window","scrollY","classList","add","remove","scrollTo","pathname","props","router","products","layOutCls","logo","classOne","classTwo","toggleNavbar","handleDrawer","handleSearchForm","Component","mapStateToProps","addedItems"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport Link from '../../utils/ActiveLink';\r\nimport SideDrawer from './SideDrawer';\r\nimport SearchForm from './SearchForm';\r\n\r\nclass Navbar extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    drawer: false,\r\n    searchForm: false,\r\n    collapsed: true,\r\n  };\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  handleDrawer = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        drawer: !prevState.drawer,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSearchForm = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        searchForm: !prevState.searchForm,\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    let elementId = document.getElementById('navbar');\r\n    document.addEventListener('scroll', () => {\r\n      if (window.scrollY > 170) {\r\n        elementId.classList.add('is-sticky');\r\n      } else {\r\n        elementId.classList.remove('is-sticky');\r\n      }\r\n    });\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    let { pathname } = this.props.router;\r\n    let { products } = this.props;\r\n\r\n    let layOutCls = '';\r\n    let logo = '/images/logot.png';\r\n    if (pathname == '/digital-marketing') {\r\n      layOutCls = 'marketing-navbar';\r\n      logo = '/images/logo-truthdrk.png';\r\n    }\r\n\r\n    const { collapsed } = this.state;\r\n    const classOne = collapsed\r\n      ? 'collapse navbar-collapse'\r\n      : 'collapse navbar-collapse show';\r\n    const classTwo = collapsed\r\n      ? 'navbar-toggler navbar-toggler-right collapsed'\r\n      : 'navbar-toggler navbar-toggler-right';\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <header id='header'>\r\n          <div id='navbar' className={`crake-nav ${layOutCls}`}>\r\n            <div className='container'>\r\n              <nav className='navbar navbar-expand-md navbar-light'>\r\n                <Link href='/'>\r\n                  <a className='navbar-brand'>\r\n                    <img src={logo} alt='logo' />\r\n                  </a>\r\n                </Link>\r\n\r\n                <button\r\n                  onClick={this.toggleNavbar}\r\n                  className={classTwo}\r\n                  type='button'\r\n                  data-toggle='collapse'\r\n                  data-target='#navbarSupportedContent'\r\n                  aria-controls='navbarSupportedContent'\r\n                  aria-expanded='false'\r\n                  aria-label='Toggle navigation'\r\n                >\r\n                  <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n\r\n                <div className={classOne} id='navbarSupportedContent'>\r\n                  <ul className='navbar-nav nav ml-auto'>\r\n                    <li className='nav-item'>\r\n                      <Link activeClassName='active' href='/'>\r\n                        <a className='nav-link'>Home</a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item'>\r\n                      <Link activeClassName='active' href='/about-one'>\r\n                        <a className='nav-link'>About</a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                      <Link activeClassName='active' href='/faq'>\r\n                        <a>FAQ</a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li className='nav-item'>\r\n                      <Link activeClassName='active' href='/contact'>\r\n                        <a className='nav-link'>Contact</a>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {this.state.drawer ? <SideDrawer onClick={this.handleDrawer} /> : ''}\r\n        {this.state.searchForm ? (\r\n          <SearchForm onClick={this.handleSearchForm} />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.addedItems,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Navbar));\r\n"]},"metadata":{},"sourceType":"module"}