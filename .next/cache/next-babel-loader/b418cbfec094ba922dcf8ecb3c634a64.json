{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nclass Funfact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(this, \"onVisibilityChange\", isVisible => {\n      if (isVisible) {\n        this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: \"app-funfacts-area ptb-100\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-users-alt-5\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 2150 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Active Clients\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-rocket-alt-1\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 86 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Success Rate\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-laptop-alt\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 550 : 0,\n      duration: 3\n    })))), __jsx(\"p\", null, \"Projects Done\"))), __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-funfact\"\n    }, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"icofont-win-trophy\"\n    })), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"count\"\n    }, __jsx(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true\n    }, __jsx(CountUp, {\n      start: 0,\n      end: this.state.didViewCountUp ? 35 : 0,\n      duration: 3\n    }))), \"+\"), __jsx(\"p\", null, \"Awards\"))))));\n  }\n\n}\n\nexport default Funfact;","map":{"version":3,"sources":["C:/Users/David/Desktop/tt/components/DigitalMarketing/Funfact.js"],"names":["React","CountUp","VisibilitySensor","Funfact","Component","didViewCountUp","isVisible","setState","render","onVisibilityChange","top","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nclass Funfact extends React.Component {\r\n\r\n    state = {\r\n        didViewCountUp: false\r\n    };\r\n\r\n    onVisibilityChange = isVisible => {\r\n        if (isVisible) {\r\n            this.setState({ didViewCountUp: true });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"app-funfacts-area ptb-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-users-alt-5\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 2150\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Active Clients</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-rocket-alt-1\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 86\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Success Rate</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-laptop-alt\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 550\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                </h3>\r\n                                <p>Projects Done</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-sm-6\">\r\n                            <div className=\"single-funfact\">\r\n                                <div className=\"icon\">\r\n                                    <i className=\"icofont-win-trophy\"></i>\r\n                                </div>\r\n                                <h3>\r\n                                    <span className=\"count\">\r\n                                        <VisibilitySensor\r\n                                            onChange={this.onVisibilityChange}\r\n                                            offset={{\r\n                                                top: 10\r\n                                            }}\r\n                                            delayedCall\r\n                                        >\r\n                                            <CountUp\r\n                                                start={0}\r\n                                                end={\r\n                                                    this.state.didViewCountUp\r\n                                                        ? 35\r\n                                                        : 0\r\n                                                }\r\n                                                duration={3}\r\n                                            />\r\n                                        </VisibilitySensor>\r\n                                    </span>\r\n                                    +\r\n                                </h3>\r\n                                <p>Awards</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Funfact;\r\n"]},"metadata":{},"sourceType":"module"}